# auto install nginx page speed
# tham khao: https://modpagespeed.com/doc/build_ngx_pagespeed_from_source
# huong dan tai day: https://raw.githubusercontent.com/pagespeed/ngx_pagespeed/master/scripts/build_ngx_pagespeed.sh



cd

#
nginx -v
nginx -V

#echo "-------------------------------------------------------------------------"
#echo -n "Tiep tuc build nginx: "
#read TiepTucBuildNginxPageSpeed
#if [ "$TiepTucBuildNginxPageSpeed" == "y" ]; then
#echo "Chuan bi build nginx page speed!"
#else
#echo "Tam dung viec build nginx page speed!"
#exit
#fi


#
if [ -f /root/ebupdate ]; then
/root/ebupdate
else
sudo yum -y update
fi

#service nginx stop
#chkconfig nginx off

#rm -rf /usr/sbin/nginx
#rm -rf /etc/nginx
#rm -rf /etc/init.d/nginx



#
sudo yum -y install make unzip


moduledir=/usr/local/vpssim
moduleEchbayDir=/usr/local
curTime=$(date +%s)
#echo ${curTime}

# https://www.openssl.org/source/
opensslversion=openssl-1.0.2l

# https://www.zlib.net/
#zlibversion=zlib-1.2.8
zlibversion=zlib-1.2.11

# get new version: http://nginx.org/en/download.html
#Nginx_VERSION="latest"
#Nginx_VERSION=1.11.4
#Nginx_VERSION=1.12.0
Nginx_VERSION=1.13.1

# get new version: https://modpagespeed.com/doc/release_notes
#NPS_VERSION=1.11.33.0
NPS_VERSION="latest-stable"



eb_reinstall_open_ssl () {
cd
cd ${moduleEchbayDir}
if [ -d ${opensslversion} ]; then
rm -rf ${opensslversion}
fi
wget -q https://www.openssl.org/source/${opensslversion}.tar.gz
tar -xzxf ${opensslversion}.tar.gz
rm -rf ${opensslversion}.tar.gz
cd ${moduleEchbayDir}/${opensslversion}
./config
make depend
make
make test
make install

cd
if [ -e /usr/bin/openssl_1.0.1e ]; then
mv /usr/bin/openssl_1.0.1e /usr/bin/openssl_1.0.1e-${curTime}bak
fi
mv /usr/bin/openssl /usr/bin/openssl_1.0.1e
ln -s /usr/local/ssl/bin/openssl /usr/bin/openssl
openssl version
}



cd
cd ${moduleEchbayDir}
if [ -d ${zlibversion} ]; then
rm -rf ${zlibversion}
fi
#wget -q http://zlib.net/${zlibversion}.tar.gz
wget -q https://www.zlib.net/${zlibversion}.tar.gz
tar -xzxf ${zlibversion}.tar.gz
rm -rf ${zlibversion}.tar.gz



cd
cd ${moduleEchbayDir}
if [ -d pcre-8.39 ]; then
rm -rf pcre-8.39
fi
wget -q https://vpssim.com/script/vpssim/module-nginx/pcre-8.39.zip
unzip -oq pcre-8.39.zip
rm -rf pcre-8.39.zip
cd




#
sudo yum -y install gcc-c++ pcre-devel zlib-devel
sudo rpm --import https://linux.web.cern.ch/linux/scientific6/docs/repository/cern/slc6X/i386/RPM-GPG-KEY-cern
sudo wget -O /etc/yum.repos.d/slc6-devtoolset.repo https://linux.web.cern.ch/linux/scientific6/docs/repository/cern/devtoolset/slc6-devtoolset.repo
sudo yum -y install devtoolset-2-gcc-c++ devtoolset-2-binutils

#
PS_NGX_EXTRA_FLAGS="--with-cc=/opt/rh/devtoolset-2/root/usr/bin/gcc"




download_module_nginx () {
echo "========================================================================="
echo "Download Nginx Module ... "
echo "========================================================================="
sleep 3

cd /usr/local/vpssim

# /usr/local/vpssim/echo-nginx-module
rm -rf echo-nginx-module*
wget --no-check-certificate https://vpssim.com/script/vpssim/module-nginx/echo-nginx-module.zip
unzip -oq echo-nginx-module.zip
rm -rf echo-nginx-module.zip

# /usr/local/vpssim/ngx_http_substitutions_filter_module
rm -rf ngx_http_substitutions_filter_module*
wget --no-check-certificate https://vpssim.com/script/vpssim/module-nginx/ngx_http_substitutions_filter_module.zip
unzip -oq ngx_http_substitutions_filter_module.zip
rm -rf ngx_http_substitutions_filter_module.zip

# /usr/local/vpssim/ngx_cache_purge-master
rm -rf ngx_cache_purge*
wget --no-check-certificate https://vpssim.com/script/vpssim/module-nginx/ngx_cache_purge.zip
unzip -oq ngx_cache_purge.zip
rm -rf ngx_cache_purge.zip

# /usr/local/vpssim/headers-more-nginx-module
rm -rf headers-more-nginx-module*
wget --no-check-certificate https://vpssim.com/script/vpssim/module-nginx/headers-more-nginx-module.zip
unzip -oq headers-more-nginx-module.zip
rm -rf headers-more-nginx-module.zip

# /usr/local/vpssim/openssl-1.0.2h
rm -rf ${opensslversion}
wget -q https://www.openssl.org/source/${opensslversion}.tar.gz
tar -xzxf ${opensslversion}.tar.gz
rm -rf ${opensslversion}.tar.gz

# $moduledir/${zlibversion}
rm -rf ${zlibversion}
wget -q http://zlib.net/${zlibversion}.tar.gz
tar -xzxf ${zlibversion}.tar.gz
rm -rf ${zlibversion}.tar.gz

# /usr/local/vpssim/pcre-8.39
rm -rf pcre-8.39
wget -q https://vpssim.com/script/vpssim/module-nginx/pcre-8.39.zip
unzip -oq pcre-8.39.zip
rm -rf pcre-8.39.zip

# /usr/local/vpssim/ngx_http_redis-0.3.8
rm -rf ngx_http_redis-0.3.8
wget -q https://vpssim.com/script/vpssim/module-nginx/ngx_http_redis-0.3.8.tar.gz
tar -xzxf ngx_http_redis-0.3.8.tar.gz
rm -rf ngx_http_redis-0.3.8.tar.gz

# /usr/local/vpssim/redis2-nginx-module
rm -rf redis2-nginx-module*
wget --no-check-certificate https://vpssim.com/script/vpssim/module-nginx/redis2-nginx-module.zip
unzip -oq redis2-nginx-module.zip
rm -rf redis2-nginx-module.zip

# /usr/local/vpssim/set-misc-nginx-module
rm -rf set-misc-nginx-module*
wget --no-check-certificate https://vpssim.com/script/vpssim/module-nginx/set-misc-nginx-module.zip
unzip -oq set-misc-nginx-module.zip
rm -rf set-misc-nginx-module.zip

# /usr/local/vpssim/ngx_devel_kit
rm -rf ngx_devel_kit*
wget --no-check-certificate https://vpssim.com/script/vpssim/module-nginx/ngx_devel_kit.zip
unzip -oq ngx_devel_kit.zip
rm -rf ngx_devel_kit.zip

# /usr/local/vpssim/ngx_http_concat
rm -rf ngx_http_concat
wget -q --no-check-certificate https://vpssim.com/script/vpssim/module-nginx/ngx_http_concat.tar.gz
tar -xzxf ngx_http_concat.tar.gz
rm -rf ngx_http_concat.tar.gz

# /usr/local/vpssim/srcache-nginx-module
rm -rf srcache-nginx-module*
wget --no-check-certificate https://vpssim.com/script/vpssim/module-nginx/srcache-nginx-module.zip
unzip -oq srcache-nginx-module.zip
rm -rf srcache-nginx-module.zip

# /usr/local/vpssim/memc-nginx-module
rm -rf memc-nginx-module*
wget --no-check-certificate https://vpssim.com/script/vpssim/module-nginx/memc-nginx-module.zip
unzip -oq memc-nginx-module.zip
rm -rf memc-nginx-module.zip

# /usr/local/vpssim/libatomic_ops-master
rm -rf libatomic_ops*
wget --no-check-certificate https://vpssim.com/script/vpssim/module-nginx/libatomic_ops.zip
unzip -oq libatomic_ops.zip
rm -rf libatomic_ops.zip

# /usr/local/vpssim/nginx-module-vts-master
#rm -rf nginx_module_vts*
#wget -q http://vpssim.com/script/vpssim/module-nginx/nginx_module_vts.tar.gz
#tar -xzxf nginx_module_vts.tar.gz
#rm -rf nginx_module_vts.tar.gz
cd

}




#
change_nginx_run_http2_no_pagespeed () {
cd
wget --no-check-certificate http://nginx.org/download/nginx-${Nginx_VERSION}.tar.gz
tar -xzxf nginx-${Nginx_VERSION}.tar.gz
rm -rf nginx-${Nginx_VERSION}.tar.gz
cd nginx-${Nginx_VERSION}
./configure --prefix=/usr/share/nginx \
--sbin-path=/usr/sbin/nginx \
--group=nginx --user=nginx \
--pid-path=/var/run/nginx.pid \
--conf-path=/etc/nginx/nginx.conf \
--with-http_v2_module \
--with-http_ssl_module \
--with-ipv6 \
--with-http_flv_module \
--with-http_mp4_module \
--with-http_random_index_module \
--with-http_secure_link_module \
--with-http_stub_status_module \
--with-http_sub_module \
--with-http_xslt_module \
--with-http_addition_module \
--with-http_dav_module \
--with-http_geoip_module \
--with-http_image_filter_module \
--with-http_perl_module \
--with-mail \
--with-mail_ssl_module \
--with-http_gunzip_module \
--with-http_gzip_static_module \
--with-file-aio \
--with-pcre=$moduleEchbayDir/pcre-8.39 \
--with-pcre-jit \
--with-google_perftools_module \
--with-debug \
--with-openssl=$moduleEchbayDir/${opensslversion} \
--with-zlib=$moduleEchbayDir/${zlibversion} \
--with-openssl-opt="enable-tlsext" \
--with-http_realip_module \
--with-http_stub_status_module \
--with-cc=/opt/rh/devtoolset-2/root/usr/bin/gcc \
--add-module=$moduledir/ngx_devel_kit-master \
--add-module=$moduledir/echo-nginx-module-master \
--add-module=$moduledir/memc-nginx-module-master \
--add-module=$moduledir/set-misc-nginx-module-master \
--add-module=$moduledir/srcache-nginx-module-master \
--add-module=$moduledir/ngx_http_concat \
--add-module=$moduledir/ngx_http_substitutions_filter_module-master \
--add-module=$moduledir/ngx_cache_purge-master \
--add-module=$moduledir/headers-more-nginx-module-master \
--add-module=$moduledir/redis2-nginx-module-master \
--add-module=$moduledir/ngx_http_redis-0.3.8

make
make install
cd
}




change_nginx_run_http2_with_pagespeed () {
cd

if [ -d $HOME/nginx-${Nginx_VERSION} ]; then
rm -rf $HOME/nginx-${Nginx_VERSION}
fi

if [ -d $HOME/ngx_pagespeed-${NPS_VERSION} ]; then
rm -rf $HOME/ngx_pagespeed-${NPS_VERSION}
fi

bash <(curl -f -L -sS https://ngxpagespeed.com/install) \
--ngx-pagespeed-version $NPS_VERSION \
--nginx-version $Nginx_VERSION \
--assume-yes \
--additional-nginx-configure-arguments '--prefix=/usr/share/nginx \
--sbin-path=/usr/sbin/nginx \
--group=nginx \
--user=nginx \
--pid-path=/var/run/nginx.pid \
--conf-path=/etc/nginx/nginx.conf \
--with-http_v2_module \
--with-http_ssl_module \
--with-http_flv_module \
--with-http_mp4_module \
--with-http_random_index_module \
--with-http_secure_link_module \
--with-http_stub_status_module \
--with-http_sub_module \
--with-http_xslt_module \
--with-http_addition_module \
--with-http_dav_module \
--with-http_geoip_module \
--with-http_image_filter_module \
--with-http_perl_module \
--with-ld-opt="-Wl,-E" \
--with-mail \
--with-mail_ssl_module \
--with-http_gunzip_module \
--with-http_gzip_static_module \
--with-file-aio \
--with-pcre=${moduleEchbayDir}/pcre-8.39 \
--with-pcre-jit \
--with-google_perftools_module \
--with-debug \
--with-zlib=${moduleEchbayDir}/${zlibversion} \
--with-openssl=${moduleEchbayDir}/${opensslversion}/ \
--with-openssl-opt="enable-tlsext" \
--conf-path=/etc/nginx/nginx.conf \
--with-http_gzip_static_module \
--with-threads \
--with-stream \
--with-stream_ssl_module \
--with-http_realip_module'
#--help
#--dynamic-module '--add-module=$HOME/ngx_pagespeed-${NPS_VERSION} ${PS_NGX_EXTRA_FLAGS}' \
#--with-cc=/opt/rh/devtoolset-2/root/usr/bin/gcc \
#--with-ipv6 \

# tao thu muc lua cache cho pagespeed
mkdir -p /var/cache/ngx_pagespeed
chown nginx:nginx /var/cache/ngx_pagespeed
mkdir -p /var/ngx_pagespeed_cache
chown nginx:nginx /var/ngx_pagespeed_cache
}


#
#checkNginxStatus=$(openssl version | awk "NR==1 {print $3}")
#echo ${checkNginxStatus}

#checkNginxStatus=$(/sbin/service nginx status | awk "NR==1 {print $3}")
#echo $checkNginxStatus


if [ ! "$(openssl version)" == "OpenSSL 1.0.2l  25 May 2017" ]; then
echo "reinstall OpenSSL"
sleep 10
eb_reinstall_open_ssl
fi
#download_module_nginx
change_nginx_run_http2_no_pagespeed
#change_nginx_run_http2_with_pagespeed

service nginx restart
#chkconfig nginx on

nginx -v
nginx -V
nginx -t
